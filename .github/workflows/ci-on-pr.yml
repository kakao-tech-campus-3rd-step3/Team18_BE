name: CI on PR (build & test)

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [develop]

jobs:
  test:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    # 위에 synchronize가 pr에 commit이 추가될 때마다 돌아간다는 의미인데, job이 동시에 동작하지 않도록 함
    concurrency:
      group: ci-${{ github.event.pull_request.head.sha }}
      # 마지막 커밋 기준으로 작동
      cancel-in-progress: true

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      # 캐시를 사용해 이전 Gradle 의존성을 다시 사용하도록 함 (속도 향상을 위함)
      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Write application.yml from GitHub Secret
        run: |
          mkdir -p ./src/main/resources
          printf "%s" "${{ secrets.APPLICATION_YML }}" > ./src/main/resources/application.yml

      # 테스트 프로필로 빌드/테스트
      - name: Build & Test
        run: SPRING_PROFILES_ACTIVE=test ./gradlew clean build