plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.kakaotech.team18'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // Redis 관련 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // Spring Security 활성화
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // Spring Security Test 활성화
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // validation 관련 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //Actuator 관련 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // OpenAPI 3.0 및 Swagger UI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.13'

    // SMTP 전송 (JavaMailSender)
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    // Thymeleaf 템플릿 렌더링(나중에 제거할 것)
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // 재시도 처리를 위함(@EnableRetry, @Retryable, @Recover)
    implementation "org.springframework.retry:spring-retry"

    // Spring Security OAuth2 Client 추가
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // Java JWT (jjwt) 추가
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // 테스트 코드에서 Lombok 사용을 위한 의존성 추가
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-aop' // AOP 기능
    implementation 'org.springframework.retry:spring-retry'     // Spring Retry

}

tasks.named('test') {
    useJUnitPlatform()
}
